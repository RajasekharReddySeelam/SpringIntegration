<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/integration
                           http://www.springframework.org/schema/integration/spring-integration.xsd
                           http://www.springframework.org/schema/integration/file
                           http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
                           http://www.springframework.org/schema/integration/xml
                           http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd">
	<!-- Defining channels -->
	<int:channel id="messageChannel" />
	<int:channel id="finalOut"/>
	<int:channel id="fileAsMessage" />
	<int:channel id="OrderProp" />
	<int:channel id="stringOrder" />
	<int:channel id="finalOUT"/>
	
		
	<int:filter input-channel="messageChannel" 	output-channel="finalOut" ref="dynamicFilter" method="filter" />
	
<!-- 	<int:bridge  input-channel="finalOut" output-channel="fileInChannel" /> -->

	<int:service-activator ref="logFilteredResult" method="logBean"	input-channel="finalOut" />
	
	<int:channel id="trash"></int:channel>
	
	<!-- Bean for FileProcessing class -->
	<bean id="processToListPojo" class="com.knack.functional.FileProcess" />
	
	<bean id="splitToPOJO" class="com.knack.functional.BeanSplitter" />
	
	<bean id="logFilteredResult" class="com.knack.functional.BeanLogger"/>
	
	
	
	<int:chain input-channel="fileAsMessage">
		<int:service-activator ref="processToListPojo" method="processFile" />
		<int:service-activator ref="splitToPOJO" method="split" />
	</int:chain>

	
	
	<!-- Dynamic Filters from file -->
	<int:channel id="filterProp"/>
	<int:channel id="stringFilters"/>
	
	<bean id="dynamicFilter" class="com.knack.functional.DynamicFilter" />
	
	<file:inbound-channel-adapter id="filterProp" directory="file:filters" prevent-duplicates="true" filename-pattern="*.properties">
        <int:poller id="poller"  fixed-rate="10000" max-messages-per-poll="2"/>
    </file:inbound-channel-adapter>	
    
    <file:file-to-string-transformer input-channel="filterProp" output-channel="stringFilters" charset="UTF-8"/>
    
    <int:service-activator id="someId" ref="dynamicFilter" input-channel="stringFilters" method="getDynamicFilters"/>
    
    <file:inbound-channel-adapter id="OrderProp" directory="file:order" prevent-duplicates="true" filename-pattern="*.xml">
        <int:poller id="poller"  fixed-rate="10000" max-messages-per-poll="2"/>
    </file:inbound-channel-adapter>	
    
    <file:file-to-string-transformer input-channel="OrderProp" output-channel="stringOrder" charset="UTF-8"/>
    
    <int-xml:unmarshalling-transformer id="xmlToObject-transformer" input-channel="stringOrder" unmarshaller="jaxbMarshaller" output-channel="finalOUT"/>
    
    <bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath" value="com.knack.jaxb" />
	</bean>
	
	<int:service-activator ref="logFilteredResult" input-channel="finalOUT" method="setOrderValue"/>
	
</beans>